from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
import sys
import os
from fastapi import APIRouter, HTTPException, status, Depends
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'shared')))
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'utils')))

from auth import db
from utils.crypto import hash_md5

router = APIRouter()

class ExploitRequest(BaseModel):
    password: str


@router.post("/exploit-passwords")
async def exploit_passwords(request: ExploitRequest):
    # VULNERÁVEL: Busca usuários pelo hash MD5 da senha
    password_hash = hash_md5(request.password)
    query = "SELECT username FROM users WHERE password = %s"
    users = db.execute_query(query, (password_hash,))
    if users:
        return {"users": [u["username"] for u in users]}
    else:
        raise HTTPException(status_code=404, detail="Nenhum usuário encontrado com essa senha")

# Endpoint GET para consultar todos os usuários e senhas
@router.get("/all-data")
async def get_all_data():
    query = "SELECT username, password FROM users"
    users = db.execute_query(query)
    return {"users": users}
